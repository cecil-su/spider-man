#!/usr/bin/env node

let program = require('commander')
let logger = require('../lib/logger')
let request = require('request')
let cheerio = require('cheerio')
let chalk = require('chalk')

program
  .usage('<search> [course-name]')

program.on('--help', function () {
  console.log(' Examples:')
  console.log()
  console.log(chalk.gray(' # search all courses by course name'))
  console.log(' $ imooc search node')
  console.log()
})

function help () {
  program.parse(process.argv)
  if (program.args.length < 1) return program.help()
}

help()

console.log()
process.on('exit', function () {
  console.log()
})

let argv = process.argv.slice(2)

let words = argv[0]
let url = 'http://www.imooc.com/search/course?words=' + words + '&page=1'

request(url, function (err, res) {
  if (err) return logger.error(err)
  if (res && res.statusCode === 200) {
    let $ = cheerio.load(res.body)
    let course = $('.course-item')
    if (!course.length) return console.log('There is no result on ' + words + '.')
    readCourseList(url, function (err, data) {
      if (Array.isArray(data)) {
        data.forEach(function (item) {
          console.log(chalk.gray('> ') + chalk.blue(item.title))
          console.log(chalk.gray('> ') + chalk.gray(item.number))
          console.log(chalk.gray('> ') + chalk.gray(item.description))
          console.log(chalk.gray('> ') + chalk.white(item.url))
        })
      }
    })
  }
})

const readCourseList = function (url, callback) {
  console.log(chalk.gray(`The result list for ${words}`))
  request(url, function (err, res) {
    if (err) return logger.error(err)
    if (res && res.statusCode === 200) {
      let $ = cheerio.load(res.body)
      let courses = []
      let course = $('.course-item')
      course.each(function () {
        return courses.push({
          title: $(this).find('.course-item-title .type').text().trim() + '-' + $(this).find('.course-item-title a').text().trim(),
          number: $(this).find('.tag strong').text().trim(),
          description: $(this).find('.content').text().replace(/(\n)+|(\r\n)+/g, "").replace(/\s/g, ""),
          url: 'http://www.imooc.com' + $(this).find('a').attr('href')
        })
      })

      let nextPage = $('.page').find('.active').next().attr('href')
      if (!nextPage) return callback(null, courses)
      nextPageURL = 'http://www.imooc.com' + nextPage

      readCourseList(nextPageURL, function (err, list) {
        if (err) return callback(err)
        return callback(null, courses.concat(list))
      })
    }
  })
}